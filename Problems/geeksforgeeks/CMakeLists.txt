cmake_minimum_required(VERSION 2.8)

SET(PARENT_PROJECT geeksforgeeks)
project (${PARENT_PROJECT})
add_definitions(-DLOCAL_TESTS)

ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/kadanes-algorithm "${CMAKE_CURRENT_BINARY_DIR}/kadanes-algorithm")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/is-sudoku-valid "${CMAKE_CURRENT_BINARY_DIR}/is-sudoku-valid")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/number-of-unique-paths "${CMAKE_CURRENT_BINARY_DIR}/number-of-unique-paths")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/sum-terms-nth-row "${CMAKE_CURRENT_BINARY_DIR}/sum-terms-nth-row")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/paths-to-reach-origin "${CMAKE_CURRENT_BINARY_DIR}/paths-to-reach-origin")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/find-duplicates-in-an-array "${CMAKE_CURRENT_BINARY_DIR}/find-duplicates-in-an-array")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/trapping-rain-water "${CMAKE_CURRENT_BINARY_DIR}/trapping-rain-water")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/rotate-array-by-n-elements "${CMAKE_CURRENT_BINARY_DIR}/rotate-array-by-n-elements")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/pair-with-given-sum-in-a-sorted-array "${CMAKE_CURRENT_BINARY_DIR}/pair-with-given-sum-in-a-sorted-array")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/spirally-traversing-a-matrix "${CMAKE_CURRENT_BINARY_DIR}/spirally-traversing-a-matrix")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/sorting-elements-of-an-array-by-frequency "${CMAKE_CURRENT_BINARY_DIR}/sorting-elements-of-an-array-by-frequency")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/sorted-subsequence-of-size-3 "${CMAKE_CURRENT_BINARY_DIR}/sorted-subsequence-of-size-3")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/lowest-common-ancestor-in-a-binary-tree "${CMAKE_CURRENT_BINARY_DIR}/lowest-common-ancestor-in-a-binary-tree")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/finding-middle-element-in-a-linked-list "${CMAKE_CURRENT_BINARY_DIR}/finding-middle-element-in-a-linked-list")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/find-missing-and-repeating "${CMAKE_CURRENT_BINARY_DIR}/find-missing-and-repeating")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/stock-buy-and-sell "${CMAKE_CURRENT_BINARY_DIR}/stock-buy-and-sell")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/detect-loop-in-linked-list "${CMAKE_CURRENT_BINARY_DIR}/detect-loop-in-linked-list")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/remove-loop-in-linked-list "${CMAKE_CURRENT_BINARY_DIR}/remove-loop-in-linked-list")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/sort-a-stack "${CMAKE_CURRENT_BINARY_DIR}/sort-a-stack")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/min-distance-between-two-given-nodes-of-a-binary-tree "${CMAKE_CURRENT_BINARY_DIR}/min-distance-between-two-given-nodes-of-a-binary-tree")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/longest-common-subsequence "${CMAKE_CURRENT_BINARY_DIR}/longest-common-subsequence")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/count-all-possible-paths-from-top-left-to-bottom-right "${CMAKE_CURRENT_BINARY_DIR}/count-all-possible-paths-from-top-left-to-bottom-right")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/sum-of-digit-is-pallindrome-or-not "${CMAKE_CURRENT_BINARY_DIR}/sum-of-digit-is-pallindrome-or-not")
